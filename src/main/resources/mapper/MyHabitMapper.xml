<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.Habit.mapper.MyHabitMapper">

    <!-- 1. 나의 습관 조회 -->
    <select id="getMyHabit" parameterType="long" resultType="com.example.backend.Habit.vo.MyHabitVO">
        SELECT mh.my_habit_id, h.habit_id, h.habit_title, h.category_title
        FROM MyHabit mh
                 JOIN HABIT h ON mh.habit_id = h.habit_id
        WHERE mh.user_id = #{userId} AND mh.state = '진행';
    </select>

    <!-- 4. 새로운 습관 작성 -->
    <insert id="insertMyHabit" parameterType="com.example.backend.Habit.vo.MyHabitVO">
        INSERT INTO Habit (user_id, habit_title, category_title, save_amount, certification)
        VALUES (#{userId}, #{habitTitle}, #{categoryTitle});

        INSERT INTO MyHabit (user_id, habit_id, state)
        VALUES (#{userId}, LAST_INSERT_ID(), '대기');
    </insert>

    <!-- 5. 습관 가져오기 -->
    <insert id="insertMyHabitFromOther" parameterType="com.example.backend.Habit.vo.MyHabitVO">
        INSERT INTO MyHabit (user_id, habit_id, state)
        VALUES (#{userId}, #{habitId}, "대기");
    </insert>

    <!-- 6. 습관 수정하기 -->
    <update id="updateMyHabit" parameterType="com.example.backend.Habit.vo.MyHabitVO">
        UPDATE Habit
        <set>
            <if test="habitTitle != null">
                habit_title = #{habitTitle},
            </if>
            <if test="categoryTitle != null">
                category_title = #{categoryTitle},
            </if>
        </set>
        WHERE habit_id = #{habitId};
    </update>

    <!-- 7. 습관 삭제하기 -->
    <delete id="deleteMyHabit" parameterType="long">
        DELETE
        FROM MyHabit
        WHERE my_habit_id = #{myHabitId};
    </delete>

    <!-- 8. 습관 상태 진행으로 변경하기 -->
    <update id="updateMyHabitStateS" parameterType="long">
        UPDATE MyHabit
        SET state = "진행"
        WHERE my_habit_id = #{myHabitId};
    </update>

    <!-- 9. 습관 상태 대기로 변경하기 -->
    <update id="updateMyHabitStateW" parameterType="long">
        UPDATE MyHabit
        SET state = "대기"
        WHERE my_habit_id = #{myHabitId};
    </update>

    <!-- 10. 오늘 절약 가능한 예상 금액 -->
    <select id="totalSaveAmount" resultType="int">
        SELECT SUM(h.save_amount) as total_save_amount
        FROM Habit h
                 JOIN Myhabit mh ON h.habit_id = mh.habit_id
        WHERE mh.state = "진행";
    </select>

    <!-- 11. 실제 절약 금액 -->
    <select id="realSaveAmount" parameterType="int" resultType="int">
        SELECT SUM(h.save_amount) AS total_save_amount
        FROM HabitCheck hc
                 JOIN Habit h ON hc.habit_id = h.habit_id
        WHERE hc.user_id = #{userId}
          AND DATE(hc.check_date) = CURDATE();
    </select>

    <!-- 12. 습관 커뮤니티에 업로드하기 -->
    <insert id="insertHabitCommunity" parameterType="int">
        INSERT INTO HabitCommunity (habit_id)
        VALUES (#{habitId});
    </insert>

    <!-- 13. 인증 커뮤니티에 업로드하기 -->
    <insert id="insertPostCommunity" parameterType="com.example.backend.PostCommunity.vo.PostCommunityVO">
        INSERT INTO PostCommunity (user_id, habit_id, imageURL, content, hashtag)
        VALUES (#{userId}, #{habitId}, #{imageURL}, #{content}, #{hashtag}

        INSERT INTO HabitCheck (check_date, my_habit_id, user_id, habit_id)
        VALUES (CURRENT_DATE, #{myHabitId}, #{userId}, #{habitId})

        UPDATE MyHabit
        SET state = '완료'
        WHERE habit_id = #{habitId} AND user_id = #{userId}
    </insert>

</mapper>
